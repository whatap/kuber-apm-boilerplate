apiVersion: v1
kind: Namespace
metadata:
  name: k8s-edu-ondemand-request
---
apiVersion: v1
kind: Namespace
metadata:
  name: k8s-edu-ondemand-crawling
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edu
  namespace: k8s-edu-ondemand-request
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: edu
  namespace: k8s-edu-ondemand-request
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edu
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edu
subjects:
  - kind: ServiceAccount
    name: edu
    namespace: k8s-edu-ondemand-request
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-fastapi-deployment
  namespace: k8s-edu-ondemand-request
spec:
  replicas: 2
  selector:
    matchLabels:
      app: python-fastapi-pod
  template:
    metadata:
      labels:
        app: python-fastapi-pod
    spec:
      serviceAccountName: edu
      containers:
      - name: agent-python-fastapi
        image: whatap/agent-python-fastapi
        ports:
        - name: fastapi-port
          containerPort: 8000
        env:
          - name: license
            value: {license}
          - name: whatap_server_host
            value: {whatap_server_host}
          - name: app_name
            value: {app_name}
          - name: app_process_name
            value: {app_process_name}
          - name: NODE_IP
            valueFrom: { fieldRef: { fieldPath: status.hostIP } }
          - name: NODE_NAME
            valueFrom: { fieldRef: { fieldPath: spec.nodeName } }
          - name: POD_NAME
            valueFrom: { fieldRef: { fieldPath: metadata.name } }
---
apiVersion: v1
kind: Service
metadata:
  namespace: k8s-edu-ondemand-request
  name: python-fastapi-service
spec:
  selector:
    app: python-fastapi-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: fastapi-port
  type: NodePort
